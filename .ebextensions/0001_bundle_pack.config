# Modified system bundle script to run 'bundle package'
files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/10_bundle_install.sh":
    content: |
      #!/usr/bin/env bash

      . /opt/elasticbeanstalk/hooks/common.sh

      set -xe

      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

      . $EB_SUPPORT_DIR/envvars
      . $EB_SCRIPT_DIR/use-app-ruby.sh

      cd $EB_APP_STAGING_DIR

      if [ -f Gemfile ]; then
          echo "running 'bundle install' with Gemfile:"
          cat Gemfile

          if [ -d $EB_CONFIG_APP_ONDECK/vendor/cache ]; then
            bundle install --local
            # Incase there is a gem that is missing from the cache
            bundle pack --all
            bundle install
          else
            bundle pack --all
            bundle install
          fi
      else
          echo "no Gemfile found! Skipping bundle install stage!"
      fi

      if [ -f Gemfile.lock ]; then
          echo "encountered a Gemfile.lock, setting proper permissions"
          chown $EB_APP_USER:$EB_APP_USER Gemfile.lock
      else
          echo "no Gemfile.lock file found, so no permissions to set on it"
      fi

      if [ "$BUNDLE_DISABLE_SHARED_GEMS" = "1" ]; then
          cd $EB_APP_STAGING_DIR;
          chown -R $EB_APP_USER:$EB_APP_USER ./$BUNDLE_PATH;

          echo "Modified the owner of '$BUNDLE_PATH' files";
      fi

    mode: "000755"