= render partial: 'info_seo_tags'

#adventure_request
  .jumbotron{:style => "background-image: url(#{image_path 'background/air.png'})"}
    .container
      .row.text-center
        .col-md-8.request_info_text.col-md-offset-2
          Tell us about the adventure you're seeking and we'll find someone awesome to host it.

        
  .adventure_info_body
    .white_background
      .container
        %h2
          REQUEST GUIDELINES
        .body_content
          %br
          We will contact our network of local hosts who have the skills that fit your trip specifications.
          %br
          If you have an idea of what the perfect Adventure Local trip should be...

    .gray_background
      .container
        %h2
          TELL US
        %form{"accept-charset" => "UTF-8", action: "/adventures/requests", method: "POST", id: "request_form", "data-remote" => "true"}
          = tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token)
          #honeypot
            %input.form-control{type: "text", name: "honeypot", id: "honeypot", placeholder: 'This field is like a captcha for bots.. Do not fill in.'}
          .form-group.row
            .col-md-4 
              .form_label.text-right.edit-label Location *
            .col-md-6
              %input.form-control{type: "text", name: "request[location]", id: "request_location", placeholder: "Enter a destination. Ex: Denver, CO"}
          .form-group.row
            .col-md-4 
              .form_label.text-right.edit-label Category *
            .col-md-6
              - options = adv_categories
              - options.each do |o|
                %label.checkbox-inline
                  %input{type: "checkbox", id: o.downcase, value: o.downcase, name: 'request_category[]'}
                  = o
          .form-group.row
            .col-md-4 
              .form_label.text-right.edit-label Dates *
            .col-md-6
              %textarea.form-control{rows: "2", type: "text", name: "request[dates]", id: "request_dates", maxlength: "250", placeholder: "Ex: 10/24/14 or any Saturday in November"}
          .form-group.row
            .col-md-4 
              .form_label.text-right.edit-label Description / Details *
            .col-md-6
              %textarea.form-control{rows: "5", type: "text", name: "request[description]", id: "request_description", maxlength: "250"}
          .form-group.row
            .col-md-4 
              .form_label.text-right.edit-label Budget/person *
            .col-md-6
              %input.form-control{type: "text", name: "request[budget]", id: "request_budget", placeholder: "$50 - $100"}
          
          - if current_user
            = tag(:input, :type => "hidden", :name => "request[email]", :value => current_user.email )

          - else
            .form-group.row
              .col-md-4 
                .form_label.text-right.edit-label Email *
              .col-md-6
                %input.form-control{type: "text", name: "request[email]", id: "request_email", maxlength: "40"}

          .row.text-center
            %input.btn.btn-primary.request_btn.disabled{type: "submit", value: "Request Adventure"}

        #request_submitted
          .row
            .col-md-10.col-md-offset-1
              = image_tag "icons/request_icon.png", class: "img-responsive"
              .adv-request-text.text-center{style: 'margin-top: 20px;'}
                Don’t worry — Advlo knows someone.
                %br
                We’ll contact you once we find a qualified host for your adventure.

:javascript
  $('#request_form').submit(function(e){
    e.preventDefault()
    $(this).submit()
    return false;
  })

  $('#request_form').on('keyup', function() {
    if ( $('#request_email').css('display') == 'block' ) {
      $('#request_email').keyup(function(){
        if($(this).val() != '' ){
          $('.request_btn').removeClass('disabled') 
        }
      })
    } 
  })

  $('#request_form').bootstrapValidator({
    fields: {
      'request[email]': {
        validators: {
          notEmpty: {
            message: 'Email is required and cannot be empty'
          },
          emailAddress: {
            message: 'Not a valid email address'
          }
        }
      },
      'request[location]': {
        validators: {
          notEmpty: {
            message: 'Comments/question is required and cannot be empty'
          }
        }
      }
    }
  });

  request_form_validator();
  request_form_geocomplete();
  request_form_maxlength();