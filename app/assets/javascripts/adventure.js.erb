function similarAdventureSlider(){
  var totalSlideCount = $('#user-adventure-slider .swiper-slide').length - 3;
  $(".prev").addClass('hide');

  $('.location').css('font-size','14px')
  $('#title').css('font-size','16px')

  if(totalSlideCount <= 0){
    $('.prev').hide()
    $('.next').hide()
  }

  var slideCount;
  if($(window).width() > 800){
    slideCount = 2;
  }else if($(window).width() < 800){
    $('#profile-next').hide()
    $('#profile-prev').hide()
    slideCount = 1;
  }


  var profileSlider = new Swiper('.swiper-container',{
    mode:'horizontal',
    slidesPerView: slideCount,
    onSlideChangeStart: function(){
      $(".prev, .next").removeClass('hide');
      if(profileSlider.activeIndex == 0) {
        $(".prev").addClass('hide');
      }
      if(profileSlider.activeIndex == totalSlideCount) {
        $(".next").addClass('hide');
      }
    }
  });  
  $('#profile-next').click(function(){
    profileSlider.swipeNext()
  })
  $('#profile-prev').click(function(){
    profileSlider.swipePrev()
  })
}

function positionLocationText(){
  $(document).ready(function(){
    $('#hero_image').css({
      height: '600px'
    });
    $('#location_text').css('top', ($('#hero_image').height() / 2.5));
  })
}

function heroScroll(){
  var hero = $('#hero_image img');
  var heroFont = $('#location_text');
  $(window).scroll(function(){
    var s = $(window).scrollTop();
    hero.css('-webkit-transform','translateY(' + (s/2) + 'px');
    heroFont.css('-webkit-transform','translateY(' + (s/2) + 'px');
  })
}
function adventureScroll(){
  var hero = $('#main_image');
  $(window).scroll(function(){
    var s = $(window).scrollTop();
    hero.css('-webkit-transform','translateY(' + (s/1.3) + 'px');    
  })
}

function toggleItineraryItemsAndArrows(){
  $('#profile-next').addClass('adventure-show-arrow-right')
  $('#profile-prev').addClass('adventure-show-arrow-left')

  $('.itinerary-brick').click(function(){
    $(this).children().last().toggle();
    $(this).children().first().toggle();
    $(this).children().first().next().toggle();
  })
  $('.itinerary-brick').first().click()
  $('.itinerary-brick').last().css('border-bottom','none')
}

function highlightFilters(){
  var num_cat = $('.filter-container ul li').length;
  var i = 0;
  var filter_li_name;
}

function adventureHover(){
  $('.hover-block').hover(function(){
    $('.copy-'+$(this).attr('id')).stop().animate({
      opacity: 0
    })
    $(this).stop().animate({
      opacity: 1
    })
  },function(){
    $('.copy-'+$(this).attr('id')).stop().animate({
      opacity: 1
    })
    $(this).stop().animate({
      opacity: 0
    })
  })
}

function filterCatch(){
  if(location.pathname == '/adventures'){
    $(window).scroll(function(){
      var s = ($(window).scrollTop() + parseInt($('.filter-container').css('height')));
      var fixedHeight = $('.filter-container').position().top
      if(s > fixedHeight ){
        $('.filter-static').show();
      }else if( s < fixedHeight ){
        $('.filter-static').hide()
      }
    })
  }else{
    $(window).unbind('scroll');
  }
} 

function masonrySetup(){
  $('.js-masonry').masonry({
    isFitWidth: true,
    itemSelector: '.adventure-brick'
  })
}

function stopSidebarAtBottom(){
  $(window).scroll(function(){
    var scrollPosition = window.pageYOffset;
    var windowSize     = window.innerHeight;
    var bodyHeight     = document.body.offsetHeight;

    var distanceFromBottom = Math.max(bodyHeight - (scrollPosition + windowSize), 0);
    if(distanceFromBottom < 76){
      $('.adventure-show-container #desktop-adventure-nav').css({
        top: 'auto',
        position: 'absolute',
        right: '0px',
        bottom: '45px'
      })
      $('.adventure-show-container .adventure-show-infographic').css({
        position: 'absolute',
        bottom: '205px',
        top: 'auto'
      })
    }else{
      $('.adventure-show-container #desktop-adventure-nav').css({
        top: 'auto',
        position: 'fixed',
        bottom: '45px',
        top: '481px',
        right: '0px'
      })
      $('.adventure-show-container .adventure-show-infographic').css({
        position: 'fixed',
        bottom: 'auto',
        top: '101px'
      })
    }
  })
}


function navBarCatch(){
  $(window).load(function(){
    fixSidebar();
    
    $(window).scroll(function(){
      var scrollPosition = window.pageYOffset;
      var windowSize     = window.innerHeight;
      var bodyHeight     = document.body.offsetHeight;
      var distanceFromBottom = Math.max(bodyHeight - (scrollPosition + windowSize), 0);
      var s = $(window).scrollTop();

      // if(distanceFromBottom < 76){

      // }else if(s > 107 ){
      //   fixSidebar();
      // }else{
      //   resetSideBar();
      // }
    })
  })
}

function widthOfBrowser(){
  var windowWidth = $(window).width();
  if( windowWidth > 1090 ){
    return 240;
  }else if( windowWidth > 1060){
    return 230;
  }else if( windowWidth > 1040){
    return 220;
  }else if( windowWidth > 1020){
    return 213;
  }else if( windowWidth > 1000){
    return 190;
  }else if( windowWidth > 900){
    return 175;
  }
}

function fixSidebar(){
  $('#desktop-adventure-nav').css({
    position: 'fixed',
    right: '0px',
    top: '481px'
  })
}

function resetSideBar(){
  $('#desktop-adventure-nav').css({
    position: 'relative',
    top: '0px',
    right: '0px'
  })
}

function sizeSidebar(){
  $(document).ready(function(){
    var navWidth = $('.navigation-brick').last().width();
    $('.adventure-show-infographic').width( navWidth - 30);

    if($(window).height() < 705){
      $('.navigation-brick').last().hide();
    }
  })
}

function navigationBreadcrumbs(){
  $(document).ready(function() {
    $('a[href*=#]:not([href=#])').click(function() {
      if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
        var target = $(this.hash);
        target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
        if (target.length) {
          $('html,body').animate({
            scrollTop: target.offset().top-77
          }, 1000);
          return false;
        }
      }
    });
  });
}

function centerProfileImage(){
  $('.guide-image').each(function(){
    var imageWidth = $(this).find('img').width();
    if( imageWidth > 300){
      $(this).find('img').css('margin-left','-40%');
    }else if(imageWidth > 250){
      $(this).find('img').css('margin-left','-20%');
    }else if(imageWidth > 200){
      $(this).find('img').css('margin-left','-10%');
    }
  })
}

function centerGuideImage(){
  $(window).load(function(){
    $('.guide-profile-image').each(function(){
      var imageWidth = $(this).find('img').width();
      if( imageWidth > 300){
        $(this).find('img').css('margin-left','-30%');
      }else if(imageWidth > 250){
        $(this).find('img').css('margin-left','-20%');
      }else if(imageWidth > 200){
        $(this).find('img').css('margin-left','-10%');
      }
    })
  })
}

function advPhotoInput(){
  $("#adv_cover_img").filestyle({input: false, icon: false, buttonText: "SET COVER IMAGE"});
  $("#adv_gallery_img").filestyle({input: false, icon: false, buttonText: "SELECT GALLERY IMAGES"});
}

function galleryToggle(){
  $('.gallery-image').click(function(){
    $('.gallery-image').removeClass('active');
    $('.modal-body img').attr('src', $(this).data('image'));
    $('.modal-body img').attr('id', $(this).attr('id'));
    $(this).addClass('active');
  })
}

function galleryModalClick(){
  var totalSlides = $('.gallery-image').size()
  $('.modal-body img').click(function(i){
    $('.modal-body img').removeClass()
    if($('.gallery-image').last().hasClass('active')){
      $('.gallery-image').removeClass('active');
      $('.gallery-image').first().addClass('active');
      $(this).attr('src', $('.active').data('image'));
    }else if(totalSlides > 1){
      $(this).attr('src', $('.active').next().data('image'));
      $('.active').next().addClass('active');
      $('.active').first().removeClass('active');
    }
  });


  // Right / Left Arrow browse
  $('body').keydown(function(e) {
    // LEFT KEY
    if(e.keyCode == 37) {
      
    }
    // RIGHT KEY
    else if (e.keyCode == 39) {

    }

  });
}

function galleryMasonry(){
  $('#gallery-masonry-container').imagesLoaded(function(){
    $('#gallery-masonry-container').masonry({
      isFitWidth: true,
      itemSelector: '.gallery-image',
    });
  })
}

function show_change_bank_form() {
  $('.bank_change_btn').click(function() {
    $('#change_bank_form').fadeToggle();
  });
}

function input_geocomplete() {
  var adv_location = $('#adventure_edit_form #adv_location').val();

  if (adv_location) {
    $('#adventure_edit_form #adv_location').geocomplete({
      map: "#adventure_edit_form .location_map",
      location: adv_location
    });
  }
  else {
    $('#adventure_edit_form #adv_location').geocomplete({
      map: "#adventure_edit_form .location_map"
    });
  }
}

function create_header_remove_arrow() {
  if ($(window).width() > 768) {
    $('.create_steps_header ul li i').addClass('fa fa-long-arrow-right');
  }

  $(window).resize(function() {
    if ($(window).width() < 768) {
      $('.create_steps_header ul li i').removeClass('fa fa-long-arrow-right');
      $('.create_steps_header ul').addClass('nav-stacked');
      $('.create_steps_header .nav').css({
        paddingLeft: "0"
      });
    } 
    if ($(window).width() > 768) {
      $('.create_steps_header ul li i').addClass('fa fa-long-arrow-right');
      $('.create_steps_header ul').removeClass('nav-stacked')
      $('.create_steps_header .nav').css({
        paddingLeft: "40px"
      });
    } 
  });
}

function request_form_maxlength(){
  $('#request_form input.show_ml').maxlength({
    alwaysShow: true,
    warningClass: "label label-success",
  });

  $('#request_form textarea.show_ml').maxlength({
    alwaysShow: true,
    warningClass: "label label-success",
  });

}

function request_form_geocomplete() {
  $('#request_form #request_location').geocomplete();
}

function request_time_datepicker() {
  var today = new Date();
  var cur_day = today.getDate();
  var cur_mon = today.getMonth()+1;
  var cur_yr = today.getFullYear();

  $('#request_reservation_date').datepicker({
    format: "yyyy/mm/dd",
    startDate: cur_yr+"/"+cur_mon+"/"+cur_day,
    orientation: "auto right",
    autoclose: true,
    todayBtn: true,
    todayHighlight: true
  });
}

function request_time_timepicker() {
  $('#request_reservation_time').timepicker({
    'scrollDefault': 'now',
    'timeFormat': 'h:i A',
  });
}

function request_time_validator() {
  $('#request_time_form').bootstrapValidator({
    fields: {
      'request_reservation[date]': {
        validators: {
          notEmpty: {
            message: 'Date is required'
          }
        }
      },
      'request_reservation[time]': {
        validators: {
          notEmpty: {
            message: 'Time is required'
          }
        }
      }
    }
  });

  $('#request_time_form #request_reservation_date').change(function() {
    var l1 = $.trim($(this).val());

    $('#request_time_form #request_reservation_time').change(function() {
      var l2 = $.trim($(this).val());

      if (l1.length > 6 && l2.length > 5) {
        $('#request_time_form .request_time_btn').removeClass('disabled');
      }
      else {
        $('#request_time_form .request_time_btn').addClass('disabled');
      }

    });
  });

  $('#request_time_form #request_reservation_time').change(function() {
    var l1 = $.trim($(this).val());

    $('#request_time_form #request_reservation_date').change(function() {
      var l2 = $.trim($(this).val());

      if (l1.length > 5 && l2.length > 6) {
        $('#request_time_form .request_time_btn').removeClass('disabled');
      }
      else {
        $('#request_time_form .request_time_btn').addClass('disabled');
      }

    });
  });

}

function request_form_validator() {
  $('#request_form').bootstrapValidator({
    fields: {
      'request[email]': {
        validators: {
          notEmpty: {
            message: 'Email is required and cannot be empty'
          },
          emailAddress: {
            message: 'Not a valid email address'
          }
        }
      },
      'request[location]': {
        validators: {
          notEmpty: {
            message: 'Destination is required and cannot be empty'
          }
        }
      },
      'request[description]': {
        validators: {
          notEmpty: {
            message: 'Description is required and cannot be empty'
          }
        }
      },
      'request[dates]': {
        validators: {
          notEmpty: {
            message: 'Date is required and cannot be empty'
          }
        }
      },
      'request[budget]': {
        validators: {
          notEmpty: {
            message: 'Budget is required and cannot be empty'
          }
        }
      }
    }
  });
}

function request_location_validator() {
  $('#request_location_form').bootstrapValidator({
    fields: {
      'request_location[email]': {
        validators: {
          notEmpty: {
            message: 'Email is required and cannot be empty'
          },
          emailAddress: {
            message: 'Not a valid email address'
          }
        }
      },
      'request_location[location]': {
        validators: {
          notEmpty: {
            message: 'Destination is required and cannot be empty'
          }
        }
      },
      'request_location[comments]': {
        validators: {
          notEmpty: {
            message: 'Comments is required and cannot be empty'
          }
        }
      }
    }
  });
}

function request_location_geocomplete() {
  $('#request_location_form #request_location').geocomplete();
}



function upload_images() {
  $('#adv_gallery_img').change(function() {
    $('#loader-overlay').show();
    $('#adv_gallery_img_upload').submit();
  }); 
} 

function review_ratings_init() {
  $("form#new_review #adv_rating_input").rating({
    'min': 0,
    'max': 5,
    'step': 0.5,
    'size': 'xs',
    'showCaption': true,
    'showClear': false,
    'starCaptions': {
      0.5: '0.5',
      1: '1.0',
      1.5: '1.5',
      2: '2.0',
      2.5: '2.5',
      3: '3.0',
      3.5: '3.5',
      4: '4.0',
      4.5: '4.5',
      5: '5.0'
    }
  });

  $("form#new_review #host_rating_input").rating({
    'min': 0,
    'max': 5,
    'step': 0.5,
    'size': 'xs',
    'showCaption': true,
    'showClear': false,
    'starCaptions': {
      0.5: '0.5',
      1: '1.0',
      1.5: '1.5',
      2: '2.0',
      2.5: '2.5',
      3: '3.0',
      3.5: '3.5',
      4: '4.0',
      4.5: '4.5',
      5: '5.0'
    }
  });
}

function adv_index_rating_show() {
  var adv_id;
  var rating;
  var adv_rating_show_id;
  var adv_rating_value_id;
  var num_of_adv = $('#adventure-partial input').length / 2;

  var i = 0;

  for(; i < num_of_adv; i++) {
    adv_rating_show_id = "#adventure-partial input#adv_rating_show_"+i;
    adv_rating_value_id = "#adventure-partial input#adv_rating_value_"+i;

    //initialize
    $(adv_rating_show_id).rating({
      'min': 0,
      'max': 5,
      'step': 0.1,
      'size': 'xs',
      'readonly': true,
      'showCaption': false,
      'showClear': false
    });

    //update rating
    rating = $(adv_rating_value_id).data('rating');

    if(rating) {
      $('.copy#'+i+" .star-rating").removeClass('no_ratings');
      $(adv_rating_show_id).rating('update', rating);
    }
    else {
      //Make it opaque if there are no ratings
      $('.copy#'+i+" .star-rating").addClass('no_ratings');
      $('.no_ratings').css('opacity','0.35');
    }
  }
}

function adv_browse_rating_show() {
  var adv_id;
  var rating;
  var adv_rating_show_id;
  var adv_rating_value_id;
  var num_of_adv = $('#adventure_browse input').length / 2;

  var i = 0;

  for(; i < num_of_adv; i++) {
    adv_rating_show_id = "#adventure_browse input#adv_rating_show_"+i;
    adv_rating_value_id = "#adventure_browse input#adv_rating_value_"+i;

    //initialize
    $(adv_rating_show_id).rating({
      'min': 0,
      'max': 5,
      'step': 0.1,
      'size': 'xs',
      'readonly': true,
      'showCaption': false,
      'showClear': false
    });

    //update rating
    rating = $(adv_rating_value_id).data('rating');
    $(adv_rating_show_id).rating('update', rating);

    $('.rating-xs').css('font-size','12px')
  }
}

//------------------FORM VALIDATORS------------------

function form_validator(){
  $('#adventure_edit_form').bootstrapValidator({
    fields: {
      'adventure[title]': {
        validators: {
          notEmpty: {
            message: 'The title is required and cannot be empty'
          }
        }
      },
      'adventure[category]': {
        validators: {
          notEmpty: {
            message: 'A category is required and cannot be empty'
          }
        }
      },
      'adventure[location]': {
        validators: {
          notEmpty: {
            message: 'The location is required and cannot be empty'
          }
        }
      },
      'adventure[summary]': {
        validators: {
          notEmpty: {
            message: 'The summary is required and cannot be empty'
          }
        }
      },
      'adventure[cap_min]': {
        validators: {
          notEmpty: {
            message: 'Min. req.'
          },
          integer: {
            message: 'Integer req.' 
          }
        }
      },
      'adventure[cap_max]': {
        validators: {
          notEmpty: {
            message: 'Max. req.'
          },
          integer: {
            message: 'Integer req.' 
          }
        }
      },
      'adventure[duration_num]': {
        validators: {
          notEmpty: {
            message: 'Cannot be empty'
          },
          integer: {
            message: 'Integer req.'
          }
        }
      },
      'adventure[price]': {
        validators: {
          notEmpty: {
            message: 'Cannot be empty'
          },
          integer: {
            message: 'Integer req.'
          }
        }
      },
      'adventure[price_type]': {
        validators: {
          notEmpty: {
            message: 'Please select price type'
          }
        }
      },
      'category[]': {
        validators: {
          notEmpty: {
            message: 'Please select a category'
          }
        }
      }
    }
  });

  $('#adventure_iten_form').bootstrapValidator({
    fields: {
      'headline': {
        validators: {
          notEmpty: {
            message: 'Event title cannot be empty'
          }
        }
      },
      'description': {
        validators: {
          notEmpty: {
            message: 'Event description cannot be empty'
          }
        }
      }
    }
  });

  $('#add_cc_form').bootstrapValidator({
    fields: {
      'recipient[cardholders_name]': {
        validators: {
          notEmpty: {
            message: 'Please enter credit card full name'
          }
        }
      },
      'recipient[credit_card_number]': {
        validators: {
          notEmpty: {
            message: 'Please enter credit card number'
          },
          creditCard: {
            message: 'Credit card number is invalid'
          }
        }
      },
      'recipient[cvv]': {
        validators: {
          notEmpty: {
            message: 'Please enter credit card CVV'
          },
          cvv: {
            message: 'CVV number is invalid'
          }
        }
      },
      'recipient[cc_exp_month]': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          digits: {
            message: 'Exp. month is invalid'
          },
          lessThan: {
            value: 12,
            inclusive: false,
            message: 'Exp. month is invalid'
          }
        }
      },
      'recipient[cc_exp_year]': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          integer: {
            message: 'Exp. year is invalid'
          }
        }
      }
    }
  });
  $('#add_bank_form').bootstrapValidator({
      fields: {
        'recipient[bank_account_name]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank account holders full name'
            }
          }
        },
        'recipient[bank_routing_number]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank account routing number'
            },
            numeric: {
              message: 'Routing number is invalid'
            }
          }
        },
        'recipient[bank_account_number]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank acount number'
            },
            numeric: {
              message: 'Bank account number is invalid'
            }
          }
        }
      }
    });
  $('#change_bank_form').bootstrapValidator({
      fields: {
        'recipient[bank_account_name]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank account holders full name'
            }
          }
        },
        'recipient[bank_routing_number]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank account routing number'
            },
            numeric: {
              message: 'Routing number is invalid'
            }
          }
        },
        'recipient[bank_account_number]': {
          validators: {
            notEmpty: {
              message: 'Please enter bank acount number'
            },
            numeric: {
              message: 'Bank account number is invalid'
            }
          }
        }
      }
    });
}

function payment_modal_validator() {
  $('#new_reservation').bootstrapValidator({
    fields: {
      'credit_card_name': {
        validators: {
          notEmpty: {
            message: 'The CC Full Name is required and cannot be empty'
          }
        }
      },
      'credit_card_number': {
        validators: {
          notEmpty: {
            message: 'The credit card number is required and cannot be empty'
          },
          creditCard: {
            message: 'Invalid CC Number'
          }
        }
      },
      'cvv': {
        validators: {
          cvv: {
            message: 'Invalid CVV Number'
          }
        }
      },
      'exp_month': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          digits: {
            message: 'Exp. month is invalid'
          },
          lessThan: {
            value: 12,
            inclusive: false,
            message: 'Exp. month is invalid'
          }
        }
      },
      'exp_year': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          integer: {
            message: 'Exp. year is invalid'
          }
        }
      }
    }
  });
  $('form#request_reservation').bootstrapValidator({
    fields: {
      'credit_card_name': {
        validators: {
          notEmpty: {
            message: 'The CC Full Name is required and cannot be empty'
          }
        }
      },
      'credit_card_number': {
        validators: {
          notEmpty: {
            message: 'The credit card number is required and cannot be empty'
          },
          creditCard: {
            message: 'Invalid CC Number'
          }
        }
      },
      'cvv': {
        validators: {
          cvv: {
            message: 'Invalid CVV Number'
          }
        }
      },
      'exp_month': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          digits: {
            message: 'Exp. month is invalid'
          },
          lessThan: {
            value: 12,
            inclusive: false,
            message: 'Exp. month is invalid'
          }
        }
      },
      'exp_year': {
        validators: {
          notEmpty: {
            message: 'Please enter exp. month'
          },
          integer: {
            message: 'Exp. year is invalid'
          }
        }
      }
    }
  });
}

//----------------FULL CALENDAR & SCHEDULE RELATED FUNCTIONS ------------
FSInitialize = function(adventure_id) {
  $('#calendar').fullCalendar({
    defaultView: "agendaWeek",
    height: 600,
    eventDurationEditable: false,
    eventStartEditable: true,
    selectable: true,
    allDaySlot: false,
    header: {
      left: 'today prev,next',
      center: 'title',
      right: ''
    },

    //RENDER EXISTING BOOKING TIMES
    eventSources: [
      {
        url: '/events',
        type: 'GET',
        data: {
          adventure_id: adventure_id
        },
        error: function(data) {
          alert('Something went wrong!');
        },
        success: function() {
        }
      },
      {
        url: '/events/reserved',
        type: 'GET',
        data: {
          adventure_id: adventure_id
        },
        color: '#C35B26',
        error: function(data) {
          alert('Something went wrong!');
        },
        success: function() {
        }
      }
    ],

    //CREATE NEW EVENT
    select: function(start, end) {
      $.ajax({
        url: "/events",
        dataType: "JSON",
        data: {adventure_id: adventure_id, start_time: start, end_time: end},
        type: "POST",
        success: function(data){   
          $('#calendar').fullCalendar('renderEvent',data);
        }
      });
    },

    //DELETE AN EVENT
    eventClick: function(event) {
      var resp = confirm('Delete this event?');

      if(resp == true) {
        $.ajax({
          url: "/events/"+event.id,
          dataType: "JSON",
          data: {},
          type: "POST",
          method: "DELETE",
          success: function(data){   
            $('#calendar').fullCalendar('removeEvents', event.id);
          }
        });
      }
    },

    //UPDATE AN EVENT
    eventDrop: function(event, revertFunc) {
      $.ajax({
        url: "/events/"+event.id,
        dataType: "JSON",
        data: {start: event.start, end: event.end},
        type: "POST",
        method: "PUT",
        error: function(){   
          revertFunc();
        }
      });
    }
  });
}


adventureSchedule = function(adventure_id) {
  FSInitialize(adventure_id);
}

adventureShow = function() {
  galleryMasonry();
  galleryModalClick();
  galleryToggle();
  sizeSidebar();
  navBarCatch(); 
  navigationBreadcrumbs();
  adventureScroll();
  centerGuideImage();
  // stopSidebarAtBottom();
  toggleItineraryItemsAndArrows()
  adventureShowHover();
  similarAdventureSlider();
  payment_modal_validator();
  request_time_validator();
  request_time_datepicker();
  request_time_timepicker();
};

adventureIndex = function() {
  positionLocationText();
  masonrySetup();
  filterCatch();
  heroScroll();
  adventureHover();
  centerProfileImage();
  highlightFilters();
  request_form_maxlength();
  request_form_validator();
  input_popover();
  request_form_geocomplete();
  adv_index_rating_show();
}

adventureCreate = function() {
  advPhotoInput();
  input_popover();
  input_datepicker();
  input_maxlength();
  create_tabs();
  form_validator();
  show_change_bank_form();
  input_geocomplete();
  create_header_remove_arrow();
  upload_images();
  request_location_validator();
  request_location_geocomplete();
}
